<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10400.17.0915.2112                               -->
<workbook original-version='10.4' source-build='10.4.0 (10400.17.0915.2112)' source-platform='win' version='10.4' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='adapt' inline='true' name='federated.14gf0590msdf1c1gqtvzn0f3my3s' version='10.4'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='adapt' name='textscan.0bukuhs0e6kegx1g3y38c0cowll7'>
            <connection class='textscan' directory='C:/Users/Sam/Desktop/projects/Coaching Actuaries Article' filename='adapt.csv' password='' server='' />
          </named-connection>
          <named-connection caption='adapt_R_extract' name='textscan.08uo6y605hemnh14t83su0nnba7f'>
            <connection class='textscan' directory='C:/Users/Sam/Desktop/projects/Coaching Actuaries Article' filename='adapt_R_extract.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.08uo6y605hemnh14t83su0nnba7f' name='adapt_R_extract.csv' table='[adapt_R_extract#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='questionID' ordinal='0' />
            <column datatype='string' name='course.x' ordinal='1' />
            <column datatype='string' name='exam_type' ordinal='2' />
            <column datatype='date' name='creation_dt' ordinal='3' />
            <column datatype='string' name='creation_time' ordinal='4' />
            <column datatype='datetime' name='creation_dt_time.x' ordinal='5' />
            <column datatype='string' name='examID.x' ordinal='6' />
            <column datatype='string' name='weekday' ordinal='7' />
            <column datatype='integer' name='marked' ordinal='8' />
            <column datatype='real' name='minutes_used' ordinal='9' />
            <column datatype='integer' name='correct' ordinal='10' />
            <column datatype='integer' name='q_ordinal' ordinal='11' />
            <column datatype='integer' name='a_ordinal' ordinal='12' />
            <column datatype='real' name='difficulty' ordinal='13' />
            <column datatype='string' name='section_minor' ordinal='14' />
            <column datatype='string' name='section_major' ordinal='15' />
            <column datatype='integer' name='nth_exam' ordinal='16' />
            <column datatype='integer' name='nth_e_or_q' ordinal='17' />
            <column datatype='real' name='total_exam_time' ordinal='18' />
            <column datatype='integer' name='num_questions' ordinal='19' />
            <column datatype='string' name='total_correct' ordinal='20' />
            <column datatype='boolean' name='exceed_time_limit' ordinal='21' />
            <column datatype='real' name='EL_begin' ordinal='22' />
            <column datatype='real' name='EL_change' ordinal='23' />
            <column datatype='real' name='EL_end' ordinal='24' />
            <column datatype='string' name='examID' ordinal='25' />
            <column datatype='string' name='course' ordinal='26' />
            <column datatype='datetime' name='creation_dt_time' ordinal='27' />
            <column datatype='real' name='hrs_since_previous' ordinal='28' />
            <column datatype='string' name='hrs_since_previous_e' ordinal='29' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>questionID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[questionID]</local-name>
            <parent-name>[adapt_R_extract.csv]</parent-name>
            <remote-alias>questionID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>course.x</remote-name>
            <remote-type>129</remote-type>
            <local-name>[course.x]</local-name>
            <parent-name>[adapt_R_extract.csv]</parent-name>
            <remote-alias>course.x</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>exam_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[exam_type]</local-name>
            <parent-name>[adapt_R_extract.csv]</parent-name>
            <remote-alias>exam_type</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>creation_dt</remote-name>
            <remote-type>133</remote-type>
            <local-name>[creation_dt]</local-name>
            <parent-name>[adapt_R_extract.csv]</parent-name>
            <remote-alias>creation_dt</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>creation_time</remote-name>
            <remote-type>129</remote-type>
            <local-name>[creation_time]</local-name>
            <parent-name>[adapt_R_extract.csv]</parent-name>
            <remote-alias>creation_time</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>creation_dt_time.x</remote-name>
            <remote-type>135</remote-type>
            <local-name>[creation_dt_time.x]</local-name>
            <parent-name>[adapt_R_extract.csv]</parent-name>
            <remote-alias>creation_dt_time.x</remote-alias>
            <ordinal>5</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;datetime&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>examID.x</remote-name>
            <remote-type>129</remote-type>
            <local-name>[examID.x]</local-name>
            <parent-name>[adapt_R_extract.csv]</parent-name>
            <remote-alias>examID.x</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekday</remote-name>
            <remote-type>129</remote-type>
            <local-name>[weekday]</local-name>
            <parent-name>[adapt_R_extract.csv]</parent-name>
            <remote-alias>weekday</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>marked</remote-name>
            <remote-type>20</remote-type>
            <local-name>[marked]</local-name>
            <parent-name>[adapt_R_extract.csv]</parent-name>
            <remote-alias>marked</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>minutes_used</remote-name>
            <remote-type>5</remote-type>
            <local-name>[minutes_used]</local-name>
            <parent-name>[adapt_R_extract.csv]</parent-name>
            <remote-alias>minutes_used</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>correct</remote-name>
            <remote-type>20</remote-type>
            <local-name>[correct]</local-name>
            <parent-name>[adapt_R_extract.csv]</parent-name>
            <remote-alias>correct</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>q_ordinal</remote-name>
            <remote-type>20</remote-type>
            <local-name>[q_ordinal]</local-name>
            <parent-name>[adapt_R_extract.csv]</parent-name>
            <remote-alias>q_ordinal</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>a_ordinal</remote-name>
            <remote-type>20</remote-type>
            <local-name>[a_ordinal]</local-name>
            <parent-name>[adapt_R_extract.csv]</parent-name>
            <remote-alias>a_ordinal</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>difficulty</remote-name>
            <remote-type>5</remote-type>
            <local-name>[difficulty]</local-name>
            <parent-name>[adapt_R_extract.csv]</parent-name>
            <remote-alias>difficulty</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>section_minor</remote-name>
            <remote-type>129</remote-type>
            <local-name>[section_minor]</local-name>
            <parent-name>[adapt_R_extract.csv]</parent-name>
            <remote-alias>section_minor</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>section_major</remote-name>
            <remote-type>129</remote-type>
            <local-name>[section_major]</local-name>
            <parent-name>[adapt_R_extract.csv]</parent-name>
            <remote-alias>section_major</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>nth_exam</remote-name>
            <remote-type>20</remote-type>
            <local-name>[nth_exam]</local-name>
            <parent-name>[adapt_R_extract.csv]</parent-name>
            <remote-alias>nth_exam</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>nth_e_or_q</remote-name>
            <remote-type>20</remote-type>
            <local-name>[nth_e_or_q]</local-name>
            <parent-name>[adapt_R_extract.csv]</parent-name>
            <remote-alias>nth_e_or_q</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_exam_time</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_exam_time]</local-name>
            <parent-name>[adapt_R_extract.csv]</parent-name>
            <remote-alias>total_exam_time</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>num_questions</remote-name>
            <remote-type>20</remote-type>
            <local-name>[num_questions]</local-name>
            <parent-name>[adapt_R_extract.csv]</parent-name>
            <remote-alias>num_questions</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_correct</remote-name>
            <remote-type>129</remote-type>
            <local-name>[total_correct]</local-name>
            <parent-name>[adapt_R_extract.csv]</parent-name>
            <remote-alias>total_correct</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>exceed_time_limit</remote-name>
            <remote-type>11</remote-type>
            <local-name>[exceed_time_limit]</local-name>
            <parent-name>[adapt_R_extract.csv]</parent-name>
            <remote-alias>exceed_time_limit</remote-alias>
            <ordinal>21</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;bool&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EL_begin</remote-name>
            <remote-type>5</remote-type>
            <local-name>[EL_begin]</local-name>
            <parent-name>[adapt_R_extract.csv]</parent-name>
            <remote-alias>EL_begin</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EL_change</remote-name>
            <remote-type>5</remote-type>
            <local-name>[EL_change]</local-name>
            <parent-name>[adapt_R_extract.csv]</parent-name>
            <remote-alias>EL_change</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EL_end</remote-name>
            <remote-type>5</remote-type>
            <local-name>[EL_end]</local-name>
            <parent-name>[adapt_R_extract.csv]</parent-name>
            <remote-alias>EL_end</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>examID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[examID]</local-name>
            <parent-name>[adapt_R_extract.csv]</parent-name>
            <remote-alias>examID</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>course</remote-name>
            <remote-type>129</remote-type>
            <local-name>[course]</local-name>
            <parent-name>[adapt_R_extract.csv]</parent-name>
            <remote-alias>course</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>creation_dt_time</remote-name>
            <remote-type>135</remote-type>
            <local-name>[creation_dt_time]</local-name>
            <parent-name>[adapt_R_extract.csv]</parent-name>
            <remote-alias>creation_dt_time</remote-alias>
            <ordinal>27</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;datetime&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hrs_since_previous</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hrs_since_previous]</local-name>
            <parent-name>[adapt_R_extract.csv]</parent-name>
            <remote-alias>hrs_since_previous</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hrs_since_previous_e</remote-name>
            <remote-type>129</remote-type>
            <local-name>[hrs_since_previous_e]</local-name>
            <parent-name>[adapt_R_extract.csv]</parent-name>
            <remote-alias>hrs_since_previous_e</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[adapt_R_extract.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Difficulty Minus EL' datatype='real' name='[Calculation_554505725170663425]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([difficulty] - [EL_begin])' />
      </column>
      <column aggregation='None' datatype='integer' name='[Difficulty (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='-1' formula='[difficulty]' peg='0' size='0.37' />
      </column>
      <column aggregation='None' datatype='integer' name='[Difficulty Minus EL (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='-1' formula='[Calculation_554505725170663425]' peg='0' size='0.41' />
      </column>
      <column caption='EL begin' datatype='real' name='[EL_begin]' role='dimension' type='ordinal' />
      <column caption='EL change' datatype='real' name='[EL_change]' role='dimension' type='ordinal' />
      <column caption='EL end' datatype='real' name='[EL_end]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Hrs Since Previous (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='-1' formula='[hrs_since_previous]' peg='0' size='1.5' />
      </column>
      <column caption='Minutes Used (bin)' datatype='integer' name='[Minutes Used (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[minutes_used]' peg='0' size='2' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Q Ordinal (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='0' formula='[q_ordinal]' peg='0' size='3.17' />
      </column>
      <column caption='A Ordinal' datatype='integer' name='[a_ordinal]' role='measure' type='quantitative' />
      <column caption='Correct' datatype='integer' name='[correct]' role='dimension' type='ordinal' />
      <column caption='Course.X' datatype='string' name='[course.x]' role='dimension' type='nominal' />
      <column caption='Course' datatype='string' name='[course]' role='dimension' type='nominal' />
      <column caption='Creation Dt' datatype='date' name='[creation_dt]' role='dimension' type='ordinal' />
      <column caption='Creation Dt Time.X' datatype='datetime' name='[creation_dt_time.x]' role='dimension' type='ordinal' />
      <column caption='Creation Dt Time' datatype='datetime' name='[creation_dt_time]' role='dimension' type='ordinal' />
      <column caption='Creation Time' datatype='string' name='[creation_time]' role='dimension' type='nominal' />
      <column caption='Difficulty' datatype='real' name='[difficulty]' role='measure' type='quantitative' />
      <column caption='Exam ID' datatype='string' name='[examID]' role='dimension' type='nominal' />
      <column caption='Exam Type' datatype='string' name='[exam_type]' role='dimension' type='nominal' />
      <column caption='Exceed Time Limit' datatype='boolean' name='[exceed_time_limit]' role='dimension' type='nominal' />
      <column caption='Hrs Since Previous' datatype='real' name='[hrs_since_previous]' role='measure' type='quantitative' />
      <column caption='Hrs Since Previous E' datatype='string' name='[hrs_since_previous_e]' role='dimension' type='nominal' />
      <column caption='Marked' datatype='integer' name='[marked]' role='measure' type='quantitative' />
      <column caption='Minutes Used' datatype='real' name='[minutes_used]' role='measure' type='quantitative' />
      <column caption='Nth E Or Q' datatype='integer' name='[nth_e_or_q]' role='measure' type='quantitative' />
      <column caption='Nth Exam' datatype='integer' name='[nth_exam]' role='measure' type='quantitative' />
      <column caption='Num Questions' datatype='integer' name='[num_questions]' role='measure' type='quantitative' />
      <column caption='Q Ordinal' datatype='integer' name='[q_ordinal]' role='measure' type='quantitative' />
      <column caption='Question ID' datatype='string' name='[questionID]' role='dimension' type='nominal' />
      <column caption='Section Major' datatype='string' name='[section_major]' role='dimension' type='nominal' />
      <column caption='Section Minor' datatype='string' name='[section_minor]' role='dimension' type='nominal' />
      <column caption='Total Correct' datatype='string' name='[total_correct]' role='dimension' type='nominal' />
      <column caption='Total Exam Time' datatype='real' name='[total_exam_time]' role='measure' type='quantitative' />
      <column caption='Weekday' datatype='string' name='[weekday]' role='dimension' type='nominal' />
      <column-instance column='[EL_begin]' derivation='Attribute' name='[attr:EL_begin:ok]' pivot='key' type='ordinal' />
      <column-instance column='[EL_begin]' derivation='Attribute' name='[attr:EL_begin:qk]' pivot='key' type='quantitative' />
      <column-instance column='[EL_change]' derivation='Attribute' name='[attr:EL_change:ok]' pivot='key' type='ordinal' />
      <column-instance column='[EL_end]' derivation='Attribute' name='[attr:EL_end:ok]' pivot='key' type='ordinal' />
      <column-instance column='[correct]' derivation='Attribute' name='[attr:correct:qk]' pivot='key' type='quantitative' />
      <column-instance column='[minutes_used]' derivation='Attribute' name='[attr:minutes_used:qk]' pivot='key' type='quantitative' />
      <column-instance column='[difficulty]' derivation='Avg' name='[avg:difficulty:qk]' pivot='key' type='quantitative' />
      <column-instance column='[minutes_used]' derivation='Avg' name='[avg:minutes_used:qk]' pivot='key' type='quantitative' />
      <column-instance column='[EL_begin]' derivation='Min' name='[min:EL_begin:ok]' pivot='key' type='ordinal' />
      <column-instance column='[EL_begin]' derivation='None' name='[none:EL_begin:ok]' pivot='key' type='ordinal' />
      <column-instance column='[correct]' derivation='None' name='[none:correct:ok]' pivot='key' type='ordinal' />
      <column-instance column='[course]' derivation='None' name='[none:course:nk]' pivot='key' type='nominal' />
      <column-instance column='[exam_type]' derivation='None' name='[none:exam_type:nk]' pivot='key' type='nominal' />
      <column-instance column='[exceed_time_limit]' derivation='None' name='[none:exceed_time_limit:nk]' pivot='key' type='nominal' />
      <column-instance column='[marked]' derivation='None' name='[none:marked:qk]' pivot='key' type='quantitative' />
      <column-instance column='[questionID]' derivation='None' name='[none:questionID:nk]' pivot='key' type='nominal' />
      <column-instance column='[correct]' derivation='Sum' name='[pcto:sum:correct:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[marked]' derivation='Sum' name='[pcto:sum:marked:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_554505725170663425]' derivation='Sum' name='[sum:Calculation_554505725170663425:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[a_ordinal]' derivation='Sum' name='[sum:a_ordinal:qk]' pivot='key' type='quantitative' />
      <column-instance column='[correct]' derivation='Sum' name='[sum:correct:qk]' pivot='key' type='quantitative' />
      <column-instance column='[difficulty]' derivation='Sum' name='[sum:difficulty:qk]' pivot='key' type='quantitative' />
      <column-instance column='[hrs_since_previous]' derivation='Sum' name='[sum:hrs_since_previous:qk]' pivot='key' type='quantitative' />
      <column-instance column='[marked]' derivation='Sum' name='[sum:marked:ok]' pivot='key' type='ordinal' />
      <column-instance column='[marked]' derivation='Sum' name='[sum:marked:qk]' pivot='key' type='quantitative' />
      <column-instance column='[minutes_used]' derivation='Sum' name='[sum:minutes_used:qk]' pivot='key' type='quantitative' />
      <column-instance column='[nth_e_or_q]' derivation='Sum' name='[sum:nth_e_or_q:qk]' pivot='key' type='quantitative' />
      <column-instance column='[nth_exam]' derivation='Sum' name='[sum:nth_exam:qk]' pivot='key' type='quantitative' />
      <column-instance column='[num_questions]' derivation='Sum' name='[sum:num_questions:qk]' pivot='key' type='quantitative' />
      <column-instance column='[q_ordinal]' derivation='Sum' name='[sum:q_ordinal:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_exam_time]' derivation='Sum' name='[sum:total_exam_time:qk]' pivot='key' type='quantitative' />
      <group hidden='true' name='[Exclusions (Course,Question ID)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:course:nk]' />
          <groupfilter function='level-members' level='[none:questionID:nk]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.367704' measure-ordering='alphabetic' measure-percentage='0.632296' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:exceed_time_limit:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#e15759'>
              <bucket>false</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>true</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:exam_type:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;q&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;NA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;e&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.14gf0590msdf1c1gqtvzn0f3my3s].[sum:total_exam_time:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.14gf0590msdf1c1gqtvzn0f3my3s]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.14gf0590msdf1c1gqtvzn0f3my3s].[attr:EL_begin:ok]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.14gf0590msdf1c1gqtvzn0f3my3s].[attr:EL_begin:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.14gf0590msdf1c1gqtvzn0f3my3s].[attr:EL_change:ok]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.14gf0590msdf1c1gqtvzn0f3my3s].[attr:EL_end:ok]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.14gf0590msdf1c1gqtvzn0f3my3s].[avg:difficulty:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.14gf0590msdf1c1gqtvzn0f3my3s].[min:EL_begin:ok]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:EL_begin:ok]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.14gf0590msdf1c1gqtvzn0f3my3s].[sum:difficulty:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.14gf0590msdf1c1gqtvzn0f3my3s].[attr:correct:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.14gf0590msdf1c1gqtvzn0f3my3s].[pcto:sum:correct:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.14gf0590msdf1c1gqtvzn0f3my3s].[sum:correct:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.14gf0590msdf1c1gqtvzn0f3my3s].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.14gf0590msdf1c1gqtvzn0f3my3s].[sum:num_questions:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.14gf0590msdf1c1gqtvzn0f3my3s].[attr:minutes_used:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.14gf0590msdf1c1gqtvzn0f3my3s].[avg:minutes_used:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.14gf0590msdf1c1gqtvzn0f3my3s].[sum:minutes_used:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.14gf0590msdf1c1gqtvzn0f3my3s].[sum:nth_exam:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:marked:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.14gf0590msdf1c1gqtvzn0f3my3s].[pcto:sum:marked:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.14gf0590msdf1c1gqtvzn0f3my3s].[sum:marked:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.14gf0590msdf1c1gqtvzn0f3my3s].[sum:hrs_since_previous:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.14gf0590msdf1c1gqtvzn0f3my3s].[sum:nth_e_or_q:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.14gf0590msdf1c1gqtvzn0f3my3s].[sum:q_ordinal:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.14gf0590msdf1c1gqtvzn0f3my3s].[sum:Calculation_554505725170663425:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.14gf0590msdf1c1gqtvzn0f3my3s].[sum:a_ordinal:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:course:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;FM&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;P&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MFE&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:correct:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>0</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>1</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[sum:marked:ok]' type='shape'>
            <map to='circle'>
              <bucket>0</bucket>
            </map>
            <map to='plus'>
              <bucket>2</bucket>
            </map>
            <map to='square'>
              <bucket>1</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Diff*Score'>
      <table>
        <view>
          <datasources>
            <datasource caption='adapt' name='federated.14gf0590msdf1c1gqtvzn0f3my3s' />
          </datasources>
          <datasource-dependencies datasource='federated.14gf0590msdf1c1gqtvzn0f3my3s'>
            <column caption='sum(correct*[Difficulty])' datatype='real' name='[Calculation_554505725174272008]' role='measure' type='quantitative' user:unnamed='Sheet 7'>
              <calculation class='tableau' formula='sum(correct*[difficulty])' />
            </column>
            <column caption='Correct' datatype='integer' name='[correct]' role='dimension' type='ordinal' />
            <column caption='Course' datatype='string' name='[course]' role='dimension' type='nominal' />
            <column caption='Difficulty' datatype='real' name='[difficulty]' role='measure' type='quantitative' />
            <column caption='Exam Type' datatype='string' name='[exam_type]' role='dimension' type='nominal' />
            <column-instance column='[course]' derivation='None' name='[none:course:nk]' pivot='key' type='nominal' />
            <column-instance column='[exam_type]' derivation='None' name='[none:exam_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[nth_exam]' derivation='None' name='[none:nth_exam:qk]' pivot='key' type='quantitative' />
            <column caption='Nth Exam' datatype='integer' name='[nth_exam]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_554505725174272008]' derivation='User' name='[usr:Calculation_554505725174272008:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:course:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;MFE&quot;</bucket>
              <bucket>&quot;FM&quot;</bucket>
              <bucket>&quot;P&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:exam_type:nk]'>
            <groupfilter function='member' level='[none:exam_type:nk]' member='&quot;e&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:exam_type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-color' value='#e6e6e6' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <trendline enable-confidence-bands='true' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>([federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:course:nk] * [federated.14gf0590msdf1c1gqtvzn0f3my3s].[usr:Calculation_554505725174272008:qk])</rows>
        <cols>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:nth_exam:qk]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='0' text-width='180'>
            <formatted-text>
              <run bold='true'>Last 3 exams should be excluded due to the environment where I was taking them?</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='12.016238159675236'>
                  <node-reference>
                    <axis>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:nth_exam:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='65.286327272727291'>
                  <node-reference>
                    <fields>
                      <field>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:course:nk]</field>
                    </fields>
                    <multibucket>
                      <bucket>&quot;P&quot;</bucket>
                    </multibucket>
                    <axis>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[usr:Calculation_554505725174272008:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='93' y='-80' />
          </annotation>
        </annotations>
      </table>
    </worksheet>
    <worksheet name='GOLD'>
      <table>
        <view>
          <datasources>
            <datasource caption='adapt' name='federated.14gf0590msdf1c1gqtvzn0f3my3s' />
          </datasources>
          <datasource-dependencies datasource='federated.14gf0590msdf1c1gqtvzn0f3my3s'>
            <column caption='Correct' datatype='integer' name='[correct]' role='dimension' type='ordinal' />
            <column caption='Course' datatype='string' name='[course]' role='dimension' type='nominal' />
            <column caption='Exam Type' datatype='string' name='[exam_type]' role='dimension' type='nominal' />
            <column caption='Marked' datatype='integer' name='[marked]' role='measure' type='quantitative' />
            <column caption='Minutes Used' datatype='real' name='[minutes_used]' role='measure' type='quantitative' />
            <column-instance column='[correct]' derivation='None' name='[none:correct:ok]' pivot='key' type='ordinal' />
            <column-instance column='[course]' derivation='None' name='[none:course:nk]' pivot='key' type='nominal' />
            <column-instance column='[exam_type]' derivation='None' name='[none:exam_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[q_ordinal]' derivation='None' name='[none:q_ordinal:qk]' pivot='key' type='quantitative' />
            <column-instance column='[correct]' derivation='Sum' name='[pcto:sum:correct:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[marked]' derivation='Sum' name='[pcto:sum:marked:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Q Ordinal' datatype='integer' name='[q_ordinal]' role='measure' type='quantitative' />
            <column-instance column='[correct]' derivation='Sum' name='[sum:correct:qk]' pivot='key' type='quantitative' />
            <column-instance column='[marked]' derivation='Sum' name='[sum:marked:qk]' pivot='key' type='quantitative' />
            <column-instance column='[minutes_used]' derivation='Sum' name='[sum:minutes_used:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.14gf0590msdf1c1gqtvzn0f3my3s].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.14gf0590msdf1c1gqtvzn0f3my3s].[sum:marked:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.14gf0590msdf1c1gqtvzn0f3my3s].[sum:correct:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.14gf0590msdf1c1gqtvzn0f3my3s].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.14gf0590msdf1c1gqtvzn0f3my3s].[pcto:sum:marked:qk]&quot;</bucket>
              <bucket>&quot;[federated.14gf0590msdf1c1gqtvzn0f3my3s].[pcto:sum:correct:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:correct:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:correct:ok]' member='0' />
              <groupfilter function='member' level='[none:correct:ok]' member='1' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:course:nk]'>
            <groupfilter function='member' level='[none:course:nk]' member='&quot;P&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:exam_type:nk]'>
            <groupfilter function='member' level='[none:exam_type:nk]' member='&quot;e&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:course:nk]</column>
            <column>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[:Measure Names]</column>
            <column>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:exam_type:nk]</column>
            <column>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:correct:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:q_ordinal:qk]' field-type='quantitative' min='0' range-type='fixedmin' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:q_ordinal:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:q_ordinal:qk]' scope='cols' value='true' />
            <encoding attr='space' class='0' field='[federated.14gf0590msdf1c1gqtvzn0f3my3s].[sum:minutes_used:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.14gf0590msdf1c1gqtvzn0f3my3s].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.14gf0590msdf1c1gqtvzn0f3my3s].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.14gf0590msdf1c1gqtvzn0f3my3s].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.14gf0590msdf1c1gqtvzn0f3my3s].[sum:minutes_used:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.14gf0590msdf1c1gqtvzn0f3my3s].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='134' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.14gf0590msdf1c1gqtvzn0f3my3s].[Multiple Values] + [federated.14gf0590msdf1c1gqtvzn0f3my3s].[sum:minutes_used:qk])</rows>
        <cols>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:q_ordinal:qk]</cols>
        <show-full-range>
          <column>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[Q Ordinal (bin)]</column>
        </show-full-range>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='0' text-width='358'>
            <formatted-text>
              <run bold='true'>When a question is earlier in the exam, I have more time to see it and let it &quot;sink in.&quot;  I will often skip the difficult questions; however, I can come back to these later on after thinking about them and or being reminded of a useful element later in the exam.</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='8.9641693811074905'>
                  <node-reference>
                    <axis>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:q_ordinal:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='8.0433789954337893'>
                  <node-reference>
                    <axis>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[sum:correct:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='16' y='147' />
          </annotation>
          <annotation class='area' id='1' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run>Questions that show up sooner allow you to think about them for longer</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord axis-value='28.6875'>
                  <node-reference>
                    <axis>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:q_ordinal:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='37.936551724137921'>
                  <node-reference>
                    <axis>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[Multiple Values]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord axis-value='34.9375'>
                  <node-reference>
                    <axis>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:q_ordinal:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='28.833103448275853'>
                  <node-reference>
                    <axis>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[Multiple Values]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
        </annotations>
      </table>
    </worksheet>
    <worksheet name='Hrs Since Prev Dist'>
      <table>
        <view>
          <datasources>
            <datasource caption='adapt' name='federated.14gf0590msdf1c1gqtvzn0f3my3s' />
          </datasources>
          <datasource-dependencies datasource='federated.14gf0590msdf1c1gqtvzn0f3my3s'>
            <column datatype='integer' name='[Hrs Since Previous (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='-1' formula='[hrs_since_previous]' peg='0' size='1.5' />
            </column>
            <column-instance column='[hrs_since_previous]' derivation='Count' name='[cnt:hrs_since_previous:qk]' pivot='key' type='quantitative' />
            <column caption='Correct' datatype='integer' name='[correct]' role='dimension' type='ordinal' />
            <column caption='Hrs Since Previous' datatype='real' name='[hrs_since_previous]' role='measure' type='quantitative' />
            <column-instance column='[Hrs Since Previous (bin)]' derivation='None' name='[none:Hrs Since Previous (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Hrs Since Previous (bin)]' derivation='None' name='[none:Hrs Since Previous (bin):qk]' pivot='key' type='quantitative' />
            <column-instance column='[correct]' derivation='None' name='[none:correct:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:Hrs Since Previous (bin):ok]' context='true'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Hrs Since Previous (bin):ok]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Hrs Since Previous (bin):ok]' member='-2180' />
                <groupfilter function='member' level='[none:Hrs Since Previous (bin):ok]' member='-12' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:correct:ok]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:correct:ok]' />
              <groupfilter function='member' level='[none:correct:ok]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:Hrs Since Previous (bin):ok]</column>
            <column>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:correct:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:Hrs Since Previous (bin):qk]' field-type='quantitative' max='30.0' min='0.0' range-type='fixed' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:Hrs Since Previous (bin):qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:Hrs Since Previous (bin):qk]' scope='cols' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
          </pane>
        </panes>
        <rows>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[cnt:hrs_since_previous:qk]</rows>
        <cols>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:Hrs Since Previous (bin):qk]</cols>
        <show-full-range>
          <column>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:Hrs Since Previous (bin):qk]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='N exams'>
      <table>
        <view>
          <datasources>
            <datasource caption='adapt' name='federated.14gf0590msdf1c1gqtvzn0f3my3s' />
          </datasources>
          <datasource-dependencies datasource='federated.14gf0590msdf1c1gqtvzn0f3my3s'>
            <column caption='Course' datatype='string' name='[course]' role='dimension' type='nominal' />
            <column-instance column='[nth_exam]' derivation='CountD' name='[ctd:nth_exam:qk]' pivot='key' type='quantitative' />
            <column caption='Exam Type' datatype='string' name='[exam_type]' role='dimension' type='nominal' />
            <column caption='Exceed Time Limit' datatype='boolean' name='[exceed_time_limit]' role='dimension' type='nominal' />
            <column-instance column='[course]' derivation='None' name='[none:course:nk]' pivot='key' type='nominal' />
            <column-instance column='[exam_type]' derivation='None' name='[none:exam_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[exceed_time_limit]' derivation='None' name='[none:exceed_time_limit:nk]' pivot='key' type='nominal' />
            <column caption='Nth Exam' datatype='integer' name='[nth_exam]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:exam_type:nk]'>
            <groupfilter function='member' level='[none:exam_type:nk]' member='&quot;e&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:exceed_time_limit:nk]' direction='ASC'>
            <dictionary>
              <bucket>%null%</bucket>
              <bucket>true</bucket>
              <bucket>false</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:exam_type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:exceed_time_limit:nk]' />
              <text column='[federated.14gf0590msdf1c1gqtvzn0f3my3s].[ctd:nth_exam:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[ctd:nth_exam:qk]</rows>
        <cols>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:course:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='N questions'>
      <table>
        <view>
          <datasources>
            <datasource caption='adapt' name='federated.14gf0590msdf1c1gqtvzn0f3my3s' />
          </datasources>
          <datasource-dependencies datasource='federated.14gf0590msdf1c1gqtvzn0f3my3s'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Course' datatype='string' name='[course]' role='dimension' type='nominal' />
            <column caption='Exam Type' datatype='string' name='[exam_type]' role='dimension' type='nominal' />
            <column-instance column='[course]' derivation='None' name='[none:course:nk]' pivot='key' type='nominal' />
            <column-instance column='[exam_type]' derivation='None' name='[none:exam_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:exam_type:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:exam_type:nk]' member='&quot;e&quot;' />
              <groupfilter function='member' level='[none:exam_type:nk]' member='&quot;q&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:exam_type:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;q&quot;</bucket>
              <bucket>&quot;e&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:exam_type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:exam_type:nk]' />
              <text column='[federated.14gf0590msdf1c1gqtvzn0f3my3s].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[sum:Number of Records:qk]</rows>
        <cols>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:course:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 11'>
      <table>
        <view>
          <datasources>
            <datasource caption='adapt' name='federated.14gf0590msdf1c1gqtvzn0f3my3s' />
          </datasources>
          <datasource-dependencies datasource='federated.14gf0590msdf1c1gqtvzn0f3my3s'>
            <column caption='([Correct]*[Difficulty])/[Number of Records]' datatype='real' name='[Calculation_311874295267659780]' role='measure' type='quantitative' user:unnamed='Sheet 11'>
              <calculation class='tableau' formula='([correct]*[difficulty])/[Number of Records]' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Correct' datatype='integer' name='[correct]' role='dimension' type='ordinal' />
            <column caption='Course' datatype='string' name='[course]' role='dimension' type='nominal' />
            <column caption='Difficulty' datatype='real' name='[difficulty]' role='measure' type='quantitative' />
            <column-instance column='[correct]' derivation='None' name='[none:correct:ok]' pivot='key' type='ordinal' />
            <column-instance column='[course]' derivation='None' name='[none:course:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekday]' derivation='None' name='[none:weekday:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_311874295267659780]' derivation='Sum' name='[sum:Calculation_311874295267659780:qk]' pivot='key' type='quantitative' />
            <column caption='Weekday' datatype='string' name='[weekday]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:correct:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:correct:ok]' member='0' />
              <groupfilter function='member' level='[none:correct:ok]' member='1' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:course:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;MFE&quot;</bucket>
              <bucket>&quot;FM&quot;</bucket>
              <bucket>&quot;P&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:correct:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:course:nk] * [federated.14gf0590msdf1c1gqtvzn0f3my3s].[sum:Calculation_311874295267659780:qk])</rows>
        <cols>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:weekday:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Study Time vs EL'>
      <table>
        <view>
          <datasources>
            <datasource caption='adapt' name='federated.14gf0590msdf1c1gqtvzn0f3my3s' />
          </datasources>
          <datasource-dependencies datasource='federated.14gf0590msdf1c1gqtvzn0f3my3s'>
            <column caption='EL begin' datatype='real' name='[EL_begin]' role='dimension' type='ordinal' />
            <column-instance column='[EL_begin]' derivation='Attribute' name='[attr:EL_begin:qk]' pivot='key' type='quantitative' />
            <column caption='Course' datatype='string' name='[course]' role='dimension' type='nominal' />
            <column caption='Creation Dt' datatype='date' name='[creation_dt]' role='dimension' type='ordinal' />
            <column caption='Exam Type' datatype='string' name='[exam_type]' role='dimension' type='nominal' />
            <column caption='Minutes Used' datatype='real' name='[minutes_used]' role='measure' type='quantitative' />
            <column-instance column='[course]' derivation='None' name='[none:course:nk]' pivot='key' type='nominal' />
            <column-instance column='[exam_type]' derivation='None' name='[none:exam_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[minutes_used]' derivation='Sum' name='[sum:minutes_used:qk]' pivot='key' type='quantitative' />
            <column-instance column='[creation_dt]' derivation='Day-Trunc' name='[tdy:creation_dt:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:course:nk]'>
            <groupfilter function='member' level='[none:course:nk]' member='&quot;P&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:exam_type:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;q&quot;</bucket>
              <bucket>&quot;e&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:course:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.14gf0590msdf1c1gqtvzn0f3my3s].[sum:minutes_used:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.14gf0590msdf1c1gqtvzn0f3my3s].[attr:EL_begin:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.14gf0590msdf1c1gqtvzn0f3my3s].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.14gf0590msdf1c1gqtvzn0f3my3s].[sum:minutes_used:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:exam_type:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.14gf0590msdf1c1gqtvzn0f3my3s].[attr:EL_begin:qk] + [federated.14gf0590msdf1c1gqtvzn0f3my3s].[sum:minutes_used:qk])</rows>
        <cols>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[tdy:creation_dt:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='adj diff'>
      <table>
        <view>
          <datasources>
            <datasource caption='adapt' name='federated.14gf0590msdf1c1gqtvzn0f3my3s' />
          </datasources>
          <datasource-dependencies datasource='federated.14gf0590msdf1c1gqtvzn0f3my3s'>
            <column caption='Difficulty Minus EL' datatype='real' name='[Calculation_554505725170663425]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([difficulty] - [EL_begin])' />
            </column>
            <column aggregation='None' datatype='integer' name='[Difficulty Minus EL (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='-1' formula='[Calculation_554505725170663425]' peg='0' size='0.41' />
            </column>
            <column caption='EL begin' datatype='real' name='[EL_begin]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_554505725170663425]' derivation='Count' name='[cnt:Calculation_554505725170663425:qk]' pivot='key' type='quantitative' />
            <column caption='Course.X' datatype='string' name='[course.x]' role='dimension' type='nominal' />
            <column caption='Difficulty' datatype='real' name='[difficulty]' role='measure' type='quantitative' />
            <column caption='Exam Type' datatype='string' name='[exam_type]' role='dimension' type='nominal' />
            <column-instance column='[Difficulty Minus EL (bin)]' derivation='None' name='[none:Difficulty Minus EL (bin):qk]' pivot='key' type='quantitative' />
            <column-instance column='[course.x]' derivation='None' name='[none:course.x:nk]' pivot='key' type='nominal' />
            <column-instance column='[exam_type]' derivation='None' name='[none:exam_type:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <sort class='manual' column='[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:course.x:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;MFE&quot;</bucket>
              <bucket>&quot;FM&quot;</bucket>
              <bucket>&quot;P&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:exam_type:nk]'>
            <groupfilter function='member' level='[none:exam_type:nk]' member='&quot;e&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:exam_type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
          </pane>
        </panes>
        <rows>([federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:course.x:nk] * [federated.14gf0590msdf1c1gqtvzn0f3my3s].[cnt:Calculation_554505725170663425:qk])</rows>
        <cols>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:Difficulty Minus EL (bin):qk]</cols>
        <show-full-range>
          <column>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:Difficulty Minus EL (bin):qk]</column>
        </show-full-range>
        <annotations>
          <annotation class='area' id='0' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run>For FM, I was setting the difficulty manually to about a 5 or a 6 for later exams</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord axis-value='-6.9497747989276144'>
                  <node-reference>
                    <axis>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:Difficulty Minus EL (bin):qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='70.0'>
                  <node-reference>
                    <fields>
                      <field>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:course.x:nk]</field>
                    </fields>
                    <multibucket>
                      <bucket>&quot;FM&quot;</bucket>
                    </multibucket>
                    <axis>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[cnt:Calculation_554505725170663425:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord axis-value='-4.7733672922252017'>
                  <node-reference>
                    <axis>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:Difficulty Minus EL (bin):qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='19.640287769784173'>
                  <node-reference>
                    <fields>
                      <field>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:course.x:nk]</field>
                    </fields>
                    <multibucket>
                      <bucket>&quot;FM&quot;</bucket>
                    </multibucket>
                    <axis>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[cnt:Calculation_554505725170663425:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
          <annotation class='area' id='1' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run>For P, I also set the difficulty to about a 5</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord axis-value='-7.298'>
                  <node-reference>
                    <axis>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:Difficulty Minus EL (bin):qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='65.97122302158273'>
                  <node-reference>
                    <fields>
                      <field>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:course.x:nk]</field>
                    </fields>
                    <multibucket>
                      <bucket>&quot;P&quot;</bucket>
                    </multibucket>
                    <axis>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[cnt:Calculation_554505725170663425:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord axis-value='-5.1215924932975874'>
                  <node-reference>
                    <axis>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:Difficulty Minus EL (bin):qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='15.611510791366904'>
                  <node-reference>
                    <fields>
                      <field>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:course.x:nk]</field>
                    </fields>
                    <multibucket>
                      <bucket>&quot;P&quot;</bucket>
                    </multibucket>
                    <axis>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[cnt:Calculation_554505725170663425:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
          <annotation class='point' id='2' mark-position='1' pullback='0' text-width='180'>
            <formatted-text>
              <run bold='true'>For MFE, I let Adapt do it&apos;s own adjusting</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='-5.5568739946380701'>
                  <node-reference>
                    <axis>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:Difficulty Minus EL (bin):qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='41.294964028776981'>
                  <node-reference>
                    <fields>
                      <field>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:course.x:nk]</field>
                    </fields>
                    <multibucket>
                      <bucket>&quot;MFE&quot;</bucket>
                    </multibucket>
                    <axis>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[cnt:Calculation_554505725170663425:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='29' y='-14' />
          </annotation>
        </annotations>
      </table>
    </worksheet>
    <worksheet name='day of week'>
      <table>
        <view>
          <datasources>
            <datasource caption='adapt' name='federated.14gf0590msdf1c1gqtvzn0f3my3s' />
          </datasources>
          <datasource-dependencies datasource='federated.14gf0590msdf1c1gqtvzn0f3my3s'>
            <column-instance column='[creation_dt]' derivation='Attribute' name='[attr:creation_dt:ok]' pivot='key' type='ordinal' />
            <column caption='Correct' datatype='integer' name='[correct]' role='dimension' type='ordinal' />
            <column caption='Course' datatype='string' name='[course]' role='dimension' type='nominal' />
            <column caption='Creation Dt' datatype='date' name='[creation_dt]' role='dimension' type='ordinal' />
            <column caption='Exam Type' datatype='string' name='[exam_type]' role='dimension' type='nominal' />
            <column-instance column='[course]' derivation='None' name='[none:course:nk]' pivot='key' type='nominal' />
            <column-instance column='[exam_type]' derivation='None' name='[none:exam_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[nth_exam]' derivation='None' name='[none:nth_exam:qk]' pivot='key' type='quantitative' />
            <column-instance column='[weekday]' derivation='None' name='[none:weekday:nk]' pivot='key' type='nominal' />
            <column caption='Nth Exam' datatype='integer' name='[nth_exam]' role='measure' type='quantitative' />
            <column-instance column='[correct]' derivation='Sum' name='[sum:correct:qk]' pivot='key' type='quantitative' />
            <column caption='Weekday' datatype='string' name='[weekday]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <sort class='manual' column='[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:course:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;MFE&quot;</bucket>
              <bucket>&quot;FM&quot;</bucket>
              <bucket>&quot;P&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:exam_type:nk]'>
            <groupfilter function='member' level='[none:exam_type:nk]' member='&quot;e&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:exam_type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <tooltip column='[federated.14gf0590msdf1c1gqtvzn0f3my3s].[attr:creation_dt:ok]' />
              <text column='[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:weekday:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:course:nk] * [federated.14gf0590msdf1c1gqtvzn0f3my3s].[sum:correct:qk])</rows>
        <cols>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:nth_exam:qk]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='0' text-width='180'>
            <formatted-text>
              <run bold='true'>Wouldn&apos;t it be nice to have a graph like this that shows everyday?  Then there would be obvious &quot;days off&quot;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='9.5871313672922245'>
                  <node-reference>
                    <axis>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:nth_exam:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='53.496402877697847'>
                  <node-reference>
                    <fields>
                      <field>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:course:nk]</field>
                    </fields>
                    <multibucket>
                      <bucket>&quot;MFE&quot;</bucket>
                    </multibucket>
                    <axis>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[sum:correct:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='130' y='-20' />
          </annotation>
        </annotations>
      </table>
    </worksheet>
    <worksheet name='diff v time scatter'>
      <table>
        <view>
          <datasources>
            <datasource caption='adapt' name='federated.14gf0590msdf1c1gqtvzn0f3my3s' />
          </datasources>
          <datasource-dependencies datasource='federated.14gf0590msdf1c1gqtvzn0f3my3s'>
            <column-instance column='[course]' derivation='Attribute' name='[attr:course:nk]' pivot='key' type='nominal' />
            <column-instance column='[minutes_used]' derivation='Attribute' name='[attr:minutes_used:qk]' pivot='key' type='quantitative' />
            <column-instance column='[nth_e_or_q]' derivation='Attribute' name='[attr:nth_e_or_q:qk]' pivot='key' type='quantitative' />
            <column-instance column='[difficulty]' derivation='Avg' name='[avg:difficulty:qk]' pivot='key' type='quantitative' />
            <column caption='Correct' datatype='integer' name='[correct]' role='dimension' type='ordinal' />
            <column caption='Course' datatype='string' name='[course]' role='dimension' type='nominal' />
            <column caption='Difficulty' datatype='real' name='[difficulty]' role='measure' type='quantitative' />
            <column caption='Exam Type' datatype='string' name='[exam_type]' role='dimension' type='nominal' />
            <column caption='Marked' datatype='integer' name='[marked]' role='measure' type='quantitative' />
            <column caption='Minutes Used' datatype='real' name='[minutes_used]' role='measure' type='quantitative' />
            <column-instance column='[correct]' derivation='None' name='[none:correct:ok]' pivot='key' type='ordinal' />
            <column-instance column='[course]' derivation='None' name='[none:course:nk]' pivot='key' type='nominal' />
            <column-instance column='[exam_type]' derivation='None' name='[none:exam_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[questionID]' derivation='None' name='[none:questionID:nk]' pivot='key' type='nominal' />
            <column caption='Nth E Or Q' datatype='integer' name='[nth_e_or_q]' role='measure' type='quantitative' />
            <column caption='Question ID' datatype='string' name='[questionID]' role='dimension' type='nominal' />
            <column-instance column='[marked]' derivation='Sum' name='[sum:marked:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.14gf0590msdf1c1gqtvzn0f3my3s].[Exclusions (Course,Question ID)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:course:nk]' />
                <groupfilter function='level-members' level='[none:questionID:nk]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:course:nk]' member='&quot;FM&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[none:questionID:nk]' member='&quot;2016-11-22 21:02:32.1000000 +00:00157363.66&quot;' />
                  <groupfilter function='member' level='[none:questionID:nk]' member='&quot;2016-11-25 17:26:22.0730000 +00:00215333.32&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.14gf0590msdf1c1gqtvzn0f3my3s].[attr:nth_e_or_q:qk]' included-values='in-range'>
            <min>6</min>
            <max>72</max>
          </filter>
          <filter class='categorical' column='[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:correct:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:correct:ok]' member='0' />
              <groupfilter function='member' level='[none:correct:ok]' member='1' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:course:nk]'>
            <groupfilter function='level-members' level='[none:course:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:exam_type:nk]'>
            <groupfilter function='member' level='[none:exam_type:nk]' member='&quot;e&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:exam_type:nk]</column>
            <column>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:correct:ok]</column>
            <column>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[Exclusions (Course,Question ID)]</column>
            <column>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:course:nk]</column>
            <column>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[attr:nth_e_or_q:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[federated.14gf0590msdf1c1gqtvzn0f3my3s].[attr:minutes_used:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.14gf0590msdf1c1gqtvzn0f3my3s].[attr:minutes_used:qk]' scope='cols' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:correct:ok]' />
              <shape column='[federated.14gf0590msdf1c1gqtvzn0f3my3s].[sum:marked:ok]' />
              <lod column='[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:questionID:nk]' />
              <tooltip column='[federated.14gf0590msdf1c1gqtvzn0f3my3s].[attr:course:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Course:&#9;</run>
                <run bold='true'>&lt;[federated.14gf0590msdf1c1gqtvzn0f3my3s].[attr:course:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Minutes Used:&#9;</run>
                <run bold='true'>&lt;[federated.14gf0590msdf1c1gqtvzn0f3my3s].[attr:minutes_used:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Avg. Difficulty:&#9;</run>
                <run bold='true'>&lt;[federated.14gf0590msdf1c1gqtvzn0f3my3s].[avg:difficulty:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.42779004573822021' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='550' />
                <format attr='maxwidth' value='550' />
                <format attr='minheight' value='438' />
                <format attr='maxheight' value='438' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[avg:difficulty:qk]</rows>
        <cols>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[attr:minutes_used:qk]</cols>
        <annotations>
          <annotation class='area' id='2' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run>Ideally, I identify the easy questions and aswer them correctly without using much time.  Dots on the lower right quandrant are not ideal in this graph.</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord axis-value='12.863079065287943'>
                  <node-reference>
                    <axis>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[attr:minutes_used:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='2.7029256241596609'>
                  <node-reference>
                    <axis>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[avg:difficulty:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord axis-value='23.077877146546015'>
                  <node-reference>
                    <axis>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[attr:minutes_used:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='0.026499270825094387'>
                  <node-reference>
                    <axis>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[avg:difficulty:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
          <annotation class='point' id='4' mark-position='1' pullback='0' text-width='180'>
            <formatted-text>
              <run bold='true'>Either lucky, or had seen question before</run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Minutes Used: </run>
              <run bold='true'>&lt;[federated.14gf0590msdf1c1gqtvzn0f3my3s].[attr:minutes_used:qk]&gt;</run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Avg. Difficulty: </run>
              <run bold='true'>&lt;[federated.14gf0590msdf1c1gqtvzn0f3my3s].[avg:difficulty:qk]&gt;</run>
              <run>Æ&#10;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='2.9845706327955686'>
                  <node-reference>
                    <axis>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[attr:minutes_used:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='10.97069812158921'>
                  <node-reference>
                    <axis>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[avg:difficulty:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='130' y='-20' />
          </annotation>
        </annotations>
      </table>
    </worksheet>
    <worksheet name='difficulty dist'>
      <table>
        <view>
          <datasources>
            <datasource caption='adapt' name='federated.14gf0590msdf1c1gqtvzn0f3my3s' />
          </datasources>
          <datasource-dependencies datasource='federated.14gf0590msdf1c1gqtvzn0f3my3s'>
            <column aggregation='None' datatype='integer' name='[Difficulty (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='-1' formula='[difficulty]' peg='0' size='0.37' />
            </column>
            <column-instance column='[difficulty]' derivation='Count' name='[cnt:difficulty:qk]' pivot='key' type='quantitative' />
            <column caption='Course' datatype='string' name='[course]' role='dimension' type='nominal' />
            <column caption='Difficulty' datatype='real' name='[difficulty]' role='measure' type='quantitative' />
            <column caption='Exam Type' datatype='string' name='[exam_type]' role='dimension' type='nominal' />
            <column-instance column='[Difficulty (bin)]' derivation='None' name='[none:Difficulty (bin):qk]' pivot='key' type='quantitative' />
            <column-instance column='[course]' derivation='None' name='[none:course:nk]' pivot='key' type='nominal' />
            <column-instance column='[exam_type]' derivation='None' name='[none:exam_type:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <sort class='manual' column='[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:course:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;MFE&quot;</bucket>
              <bucket>&quot;FM&quot;</bucket>
              <bucket>&quot;P&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:exam_type:nk]'>
            <groupfilter function='member' level='[none:exam_type:nk]' member='&quot;e&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:exam_type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
          </pane>
        </panes>
        <rows>([federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:course:nk] * [federated.14gf0590msdf1c1gqtvzn0f3my3s].[cnt:difficulty:qk])</rows>
        <cols>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:Difficulty (bin):qk]</cols>
        <show-full-range>
          <column>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[Difficulty (bin)]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='hour of start'>
      <table>
        <view>
          <datasources>
            <datasource caption='adapt' name='federated.14gf0590msdf1c1gqtvzn0f3my3s' />
          </datasources>
          <datasource-dependencies datasource='federated.14gf0590msdf1c1gqtvzn0f3my3s'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Course' datatype='string' name='[course]' role='dimension' type='nominal' />
            <column caption='Creation Dt Time' datatype='datetime' name='[creation_dt_time]' role='dimension' type='ordinal' />
            <column caption='Exam Type' datatype='string' name='[exam_type]' role='dimension' type='nominal' />
            <column-instance column='[creation_dt_time]' derivation='Hour' name='[hr:creation_dt_time:ok]' pivot='key' type='ordinal' />
            <column-instance column='[course]' derivation='None' name='[none:course:nk]' pivot='key' type='nominal' />
            <column-instance column='[exam_type]' derivation='None' name='[none:exam_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:course:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;P&quot;</bucket>
              <bucket>&quot;FM&quot;</bucket>
              <bucket>&quot;MFE&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:exam_type:nk]'>
            <groupfilter function='level-members' level='[none:exam_type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:exam_type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:exam_type:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[hr:creation_dt_time:ok]</rows>
        <cols>([federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:course:nk] * [federated.14gf0590msdf1c1gqtvzn0f3my3s].[sum:Number of Records:qk])</cols>
        <show-full-range>
          <column>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[Difficulty (bin)]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='time per Q'>
      <table>
        <view>
          <datasources>
            <datasource caption='adapt' name='federated.14gf0590msdf1c1gqtvzn0f3my3s' />
          </datasources>
          <datasource-dependencies datasource='federated.14gf0590msdf1c1gqtvzn0f3my3s'>
            <column caption='Minutes Used (bin)' datatype='integer' name='[Minutes Used (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[minutes_used]' peg='0' size='2' />
            </column>
            <column caption='Correct' datatype='integer' name='[correct]' role='dimension' type='ordinal' />
            <column caption='Course' datatype='string' name='[course]' role='dimension' type='nominal' />
            <column caption='Exam Type' datatype='string' name='[exam_type]' role='dimension' type='nominal' />
            <column caption='Minutes Used' datatype='real' name='[minutes_used]' role='measure' type='quantitative' />
            <column-instance column='[Minutes Used (bin)]' derivation='None' name='[none:Minutes Used (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[correct]' derivation='None' name='[none:correct:ok]' pivot='key' type='ordinal' />
            <column-instance column='[course]' derivation='None' name='[none:course:nk]' pivot='key' type='nominal' />
            <column-instance column='[exam_type]' derivation='None' name='[none:exam_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[questionID]' derivation='None' name='[none:questionID:nk]' pivot='key' type='nominal' />
            <column caption='Question ID' datatype='string' name='[questionID]' role='dimension' type='nominal' />
            <column-instance column='[correct]' derivation='Sum' name='[sum:correct:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:correct:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:correct:ok]' member='0' />
              <groupfilter function='member' level='[none:correct:ok]' member='1' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:course:nk]'>
            <groupfilter function='member' level='[none:course:nk]' member='&quot;P&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:exam_type:nk]'>
            <groupfilter function='member' level='[none:exam_type:nk]' member='&quot;e&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:exam_type:nk]</column>
            <column>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:correct:ok]</column>
            <column>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:course:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.14gf0590msdf1c1gqtvzn0f3my3s].[:Measure Names]' />
              <lod column='[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:questionID:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='244' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[sum:correct:qk]</rows>
        <cols>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:Minutes Used (bin):ok]</cols>
        <show-full-range>
          <column>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[Minutes Used (bin)]</column>
          <column>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[Q Ordinal (bin)]</column>
        </show-full-range>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='difficulty dist'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:exam_type:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:EL_end:nk]</field>
            <field>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:course:nk]</field>
            <field>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:exam_type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Hrs Since Prev Dist'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:course:nk]</field>
            <field>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:exam_type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='adj diff'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:EL_end:nk]</field>
            <field>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:course.x:nk]</field>
            <field>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:course:nk]</field>
            <field>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:exam_type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='hour of start'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:exam_type:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:exam_type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[hr:creation_dt_time:ok]</field>
            <field>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:EL_end:nk]</field>
            <field>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:course:nk]</field>
            <field>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:exam_type:nk]</field>
            <field>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[yr:creation_dt_time:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='N questions'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:exam_type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:course:nk]</field>
            <field>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:exam_type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='N exams'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:exceed_time_limit:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:course:nk]</field>
            <field>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:exceed_time_limit:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='day of week'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:Calculation_610519244483194883:qk]</field>
            <field>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:correct:nk]</field>
            <field>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:course:nk]</field>
            <field>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:days_since_last_exam:ok]</field>
            <field>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:exam_type:nk]</field>
            <field>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:total_exam_time:ok]</field>
            <field>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:weekday:nk]</field>
            <field>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[yr:creation_dt:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Diff*Score'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:course:nk]</field>
            <field>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:exam_type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='GOLD' tab-color='#dec77b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:course:nk]' type='filter' />
            <card pane-specification-id='2' param='[federated.14gf0590msdf1c1gqtvzn0f3my3s].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[:Measure Names]</field>
            <field>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:correct:ok]</field>
            <field>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:course:nk]</field>
            <field>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:exam_type:nk]</field>
            <field>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:exceed_time_limit:nk]</field>
            <field>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:q_ordinal:qk]</field>
            <field>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[wk:creation_dt:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='time per Q' tab-color='#dec77b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.14gf0590msdf1c1gqtvzn0f3my3s].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[:Measure Names]</field>
            <field>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:Minutes Used (bin):ok]</field>
            <field>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:correct:ok]</field>
            <field>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:course:nk]</field>
            <field>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:exam_type:nk]</field>
            <field>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:exceed_time_limit:nk]</field>
            <field>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:q_ordinal:qk]</field>
            <field>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:questionID:nk]</field>
            <field>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[wk:creation_dt:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='diff v time scatter' tab-color='#dec77b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:course:nk]' type='filter' />
            <card param='[federated.14gf0590msdf1c1gqtvzn0f3my3s].[attr:nth_e_or_q:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:correct:ok]' type='color' />
            <card pane-specification-id='0' param='[federated.14gf0590msdf1c1gqtvzn0f3my3s].[sum:marked:ok]' type='shape' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[:Measure Names]</field>
            <field>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[md:creation_dt:ok]</field>
            <field>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:Minutes Used (bin):ok]</field>
            <field>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:correct:ok]</field>
            <field>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:course:nk]</field>
            <field>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:exam_type:nk]</field>
            <field>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:exceed_time_limit:nk]</field>
            <field>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:q_ordinal:qk]</field>
            <field>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:questionID:nk]</field>
            <field>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[wk:creation_dt:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Study Time vs EL'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:course:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.14gf0590msdf1c1gqtvzn0f3my3s].[:Measure Names]' type='color' />
            <card pane-specification-id='2' param='[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:exam_type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:EL_begin:ok]</field>
            <field>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:course:nk]</field>
            <field>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:exam_type:nk]</field>
            <field>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[yr:creation_dt:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 11'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:correct:ok]</field>
            <field>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:course:nk]</field>
            <field>[federated.14gf0590msdf1c1gqtvzn0f3my3s].[none:weekday:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Diff*Score' width='192'>
      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
      RPP/A+ay8SPfq+sIAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='GOLD' width='192'>
      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
      TaAJJ5r/H4bvdOnDIg3bAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Hrs Since Prev Dist' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAASPElEQVR4nO3dXWxb93nH8e8hDymKFPX+akmWJduS/BbZke3aTpbU65oUhVOsLy5aDOgu
      NmzYCgzYxa53NWA3AzYMuxl2sZutWNdha7rWqZ22S+wmsR1HtmTLsmy9v0uURInv5HnZhWMn
      jh1S4TmmKJ7ncyXaPH8+ovjjefuf5yimaZoI4VCu7S5AiO0kARCOVpAAGIaBYRi2j5vJZGwd
      zzAMdF23dUxwbp07YcyCrQGex66G3WOaprkj6pQx7RtTNoGEo0kAhKNJAISjSQCEo0kAhKNJ
      AISjqYV6ofDGZt7nAhSgrq4WRVHsLUo4XsEC8Df/fpWx+XBeyx7rrOav//h1mysSwtImkMn4
      3QE+uH6TpKYzeW+QoXtT6FqS2x9dZ3JhDZllJ4qdpX2A5o4eOmtNpianCSt1+FNhJmcmqGjt
      Jro4Rdr+2Q9C2MrCJpBCYn2B8ZUU7Y0G7mCQKleE+XSG5oYKjHIVTTdxG7otp66fNf9D13XS
      6bTlsR95VKfd85aeR52maRZ9nTthTAsBSDI1vYSWSZBSO1i8e4MJs4zjRzq4de0dPMEGOlQF
      t6La8ofyeDxP7QSn02m8Xq/lsR/R9YdhVVV7d43srvPR5MJir3MnjGnhHfTx4ukzjx/t3d3y
      +Ocv/26rlZqEKBg5DyAcTQIgHE0CIBxNAiAcTQIgHE0CIBxNAiAcTQIgHE0CIBxNAiAcTQIg
      HE0CIBxNAiAcTQIgHE0CIBxNAiAcTQIgHE0CIBxNAiAcTQIgHE0CIBzNUgBim2tMzy6gmxBa
      nGFyag7N0FlemGMjlrKrRiGeG0sBWFleJhNbYGI+xMTEAqpHZWN5hvlQhHt3htGkN6IocpY6
      K7W0tDAxNU97rZf5kTjTMwt0NHnZ1XWA+NwdkpqJT5HOcNIZrnjHtBAAk+Hhu+zasw9FM+k6
      2Et4ZpI4AVKzk6QiaVpVBVU6w0lnuCIe01J36JrqatZCK6Tw4s7ECbbtZd/uLqrLDDp7DuKR
      dv6iyFn4CnGxZ3/vJw+DXY9/bNuz10JJQhSOHAYVjiYBEI4mARCOJgEQjiYBEI4mARCOJgEQ
      jiYBEI4mARCOJgEQjiYBEI4mARCOljMAmXSSZGyDhdAGcn2LKDU5Z4PeuHSR0WgMJeXh/A++
      g68QVQlRIDkD0NHdzuqczq6gC08hKhKigHJvAmkG2sYcdyeWsPcCPCG2X84AVNXvore3F08m
      iV6IioQooJwBMA2NpYV5XjhzmrJCVCREAeUMwPTwAKsJnWtXPuDpvgxC7Gw5A+DxetB1DbfX
      i1zjLkpN1gCEpiaIqQE2F2cJVtcWqiYhCibrYdDa1nYUn5e2vUeoDJQ/9eThj95jJZKgq/cY
      syODxCjjxJE93Lw1gqeykVMvHsIlqw1RxLIGwKWqGKkYH968Dr5GXn/tzBPnAg4cPYn/wV1c
      8TD1vcfYtznP9EqI3uOvEJu9Q0IzKZPOcNIZrojHzHkiLB7ZIBpL0NQYfGp7aXx0hIbdPfi1
      EMMrcdRkhvIKlVQiTjJtoLoVVJd0hpPOcMU7Zs6d4HR8jQ29FjWx9pkTYTrh1RCDAx+yolUS
      SC6xoVawp3UP69PDlNW14ZWpdqLIbWENkGBjeYkJGvjSE//jpv+lL3/ysPbo4x/7jj/5TCGK
      Vc4A7O9/hYrdq9Q0tWHvikyI7ZdzI2X+wR0SaiWBMlWmQ4uSkzUAmWSUmflFBq9e5vL7t9AK
      VZUQBZJlE8jgtxcvoFVUUeb285VXj8uZYFFysqwBDNZDYWKxKPcHrvLryx/JXCBRcrKsAdy8
      fv67JNIav3PmVVyqF3fh6hKiILKsART8wSoqvAYzi2FisYhsAomSk/Mw6OBvf8Pgeg3tviR1
      39xFeSGqEqJAch4G7ejpIRUaJVO7Sy6IESUnZwDCa2n+4M/+nPZyUw6DipKT+5LIzDqXLrzF
      8ExIumiJkpPzM13f1oEeWae+sVHOBIuSk3MneGr4Af1f/TqNPq+128oLUYRyrgGCtX6u/fpt
      3rs2JPsAouRk/VJfn5slXVZFQ62Gv8Iv5wFEyckaADXgp8XXTiaZxFtbJzvBouRk+UzrXLvy
      Plp6g4G70wxd/1A2gUTJyRIAF73dbbx/Y5xvffdb7NvXLjvBouRk+UwrtHb30bJXw9DTdHX3
      yCaQKDk5v9Sv//IC96NRtITK9/7wvNwfQJSUnAFoaqtjbrGOtt3qU082dA3dVPCobtKpJLoB
      Pl8ZmXQKl+pFdcs6QxS3nAFIJTIcOnyErobKp64HmBobZDVZzfEX2rh6+V389W10tlYyfG8K
      xVvBqRN9uOXYqShiOQNQFvBx9cqvmGrYw9mzJ57oDNfZ3UtmdA30BMmMgt/lJh2P0H30NLG5
      h53hfNIZTjrDFfGYWa8Jvnn5bYanVzBMSKXTnzsXSNc8nHjlZUL3hljLVFAe2SASy9AqneEA
      6QxXzGNmPQp0+NRZWtruMrrk40v9nU/dI2x44CarUQN/dYDE8gRxfwOHO1sZvT1E7e5uPLIL
      IIpclgCY3LpyiQ/vjLAWU1kJ9XHu3KtPNMc6eOzMJw8aax7/eKCv3/5KhXgOsgTARf/Zr9N/
      9uuFq0aIAssSAJ0PL39AJqPTeeIYQbeK318uE+JESck6FaK5uYKBG1f51cWLXPlgUOYCiZKT
      tS1K2/4+vvPt1zETCVS/X+YCiZKT8zM9PvyAs9/8HgO/eJPkqSPSFkXsGLFEip9dHsr6nJwB
      OHzqOJcu/Ddth07Kh1/sKLGkxo/+70HW5+QMQHn1Ln7/O+fRNQ0TZCdYlJSsp6qSsTC/+NGP
      uTk6ys9/+hapQlUlRIFkDYCeThJPpwgtLdF97EXpDCdKTtYABGqaObS/meXFJaYmZuQwqCg5
      OfcBtFSSupYOWuWieFGCcgZg9+F+lOV1PB65O4AoPTm/1JPxCKFQiCtXPkAvREVCFFDOAGjp
      JNFoFI9HdoFF6cndHLe5BVNL03fyhNwnWJScnAEYfO8qx77yBjM3r5IsREVCFFDWABiGQWdv
      J+9d+Cme5j2yBhAlJ+ttUq++8w4Vu1/g+98/jy+5LucBRMnJehhUT6xxb2yaJl+KuXBCzgOI
      kpP1gpjTv/c1zPVZHsysce6Nr8n1AKLkZP1Mu70B+k+//Ln/n0nGSeouggEf0Y1V0pRRU+ln
      PbSCt6KGinLZaxDFzdKX+uLCGKvxIH37qhgamQItTWdnE3NLUbTMPP0njqHK/GlRxCwFoL1z
      L4nRNVKbUZq69lOzOc9MJEp792Hic3dISmc4QDrDbdeYGe3pz8xnWQpAIhYjHo9DcyWrEwtE
      MxGqG6tYXZwjsZmmVVVQFekMJ53htmdMj5o7AJYO7CzOLqIoSTb1IHvqvVS1dtLe1onfjLG7
      +wAe2fwRRc7SV0hnz5FPHtQEHv/Ysa/HyrBCFIwc2heOJgEQjiYBEI4mARCOJgEQjiYBEI4m
      ARCOJhM8C8DqtAVFUZ46C/5FXnurU1E+r06Xq3S/JyUABfCTt28wMruR17LBcg8//PZpAoFA
      7ic/w+bmJn//n++j6fnNxzrZ08gbXy7dW15JAApgfi3B4FR+AagLWp9HMzS1QSbPAOxprrL8
      +sWsdNdtQmyBBEA4mgRAOJoEQDiaBEA4mgRAOJoEQDiaBEA4mgRAOJoEQDiaBEA4mk1zgTSu
      vP02VDRxpGcXt24N461s4uSxg7ikNYooYvYEQI8STbrY3VlPKrJOT/8rRGfvkNBMymzsDPfZ
      KcGGYTyzY1y+Hk0dtqPeJ8a1uLyu60/8nl+kTl23dmc303x2V76tsvtv9EXG1LTcDf1tCYBh
      +nnp7MssjNwmVBkgmEyQzhi43eBW3LZ8oFRVfSoAdndxMwwD0zRxu+29I6bVlaDb7X7i9/wi
      dVr9XRQFS+/x8+i0t9UxVTX3725TZQZTo3eIuyroa+9geHCQQHMXZS4FBWwJwOddFJLvhSK5
      XqvYfLomRVEwTbNgdVp9ne37G+V+ji0BcKk+Dh878fjxsZOn7RhWiOdOjgIJR5MACEeTAAhH
      kwAIR5MACEeTAAhHkwAIR5MACEfbMY2xwuHwU/+m6/qWpwNUVlY+j7LEDrdjAvBHf3cR3chv
      SsW3z+zhB+dO2VyRMyRTGd6/dT/v5dsbq2hrabSxInvtmABYmU9k79xOZ1mNJPnb/7iR9/J/
      +c2+og6A7AMIR9sxa4DtlMlkZA1UoiQAW/Cb63e5cH0q7+Xt6PAsng8JwBZEEhrjS7G8l6+p
      kAAUK0cEQNN0FpdWcj7P+Hgzx/WZiy3SNl/SJ4qHIwIwtxrlT//hV3kv37+3xsZqRDGxPQCm
      aRCLRlDLAvi8jsiXyCISS3B/ci7v5Xc1VOd9e6itsP0TGlmdY3hsEVPxcPLEUdzFd3mtKKCB
      sRX+5eJo3sv/4w/PPtcA2H4eIBWP0XWon5YqlWTurhRCbCvb1wAut8p6eI1oNMUue7uLCEd6
      dv+jrZyX2cpzbA9AbcseVodv09TVi1fOMwuLLl0bZSZ0M69l01ruezPbHgDFpdJ9+CjwSQJN
      06TC56XSn9/xcL/PQ2WgDCPPyXD+Mk/er73dywc/Xu7T32affl+3ojJQRmYLH4Zn2e73bj2m
      MbYUz3v5XK+tmHb3AfyUR3cef3T3cbvvOL7V6dBbtVPqfNQWsdjr3AljPtfjlIqi4Ha7H3cy
      s/uNsHvMnVLn82rh6MQxn+sa4JFHL2F3izy72wNKnfa3Wyz2MQsSACGKVcGO05hGhqEbV5lZ
      3rBhLJ2p0SFuDN0jk+eO8bOk4+uMjs3aN33ZNAnNjnF9YIiUtS7lnwypp7kzcJ27E/O2NB02
      tBTj90aIa5CMrHLt6jU2LRZrmjpzY6OsxtLo6RgD1z5gfC5ksc404/dGiGkAJsvT91jatDZH
      S0vFCxeAtYl7BLsOszw7YfkDZho6wcZ2GgIa4UjalvrAZHJ8lJXQpk3jgZaKMhVKcuyFA3hs
      2gqILEzhauwiEV7EjuynUylUPUNUg4nxaQ4e6WXsXv6XQAKYZgZFM4ikMiQTaXr6jrGxMm9p
      zEw6iefjOjOJTZamx5nfsPa3T8QThQtAPOWirjpAuUfF6pehy62ixTbQ1FrqKu2ZahyeGyPq
      CqIno3lfe/xZmpZiY3mOK1feIxRJ2DKmN1jF2uRdIkms33gA8AUqqQyUAWB6ygiUB1Hd1k7h
      u1w+6mqDKIC/IsDc5BjtnfssjVnmr6Sy4mGdD0buEqytJR6LW/oyDdbUFW42aH1TBe+9cxlf
      Ra3lF03Hw9y4OURNwy7qG+qpLPdYrk/1VxKILrEYjaKZ9hwe8/qCVFcHiKXsu+tMKhnHMF2k
      Ewl0E8tzraJriwzcHsYM6XT6U1y+8i51rd2WxtTTET66Oci6t5pYUGEuohPRvNRX5R+C2PoS
      A0PD6E0a3XX1xENTJNwPA5DvWxCamyjcTrBpmhi6juJy47J44zDTNB/f+ufRYVZ7mBgGKB/f
      2MOe8QwME9wuN7aU+eh3V1y4XC7LY5qGgW4YgILb7Xp8jN3Ke/rpv49LUR5eZ6EoqBYOXX62
      TgUwePrajS/CMHQ5CiScTWbrCEeTAAhHkwAIR5MAiG0RDocxTJP11TWeNU/VNA2W56eZXQxt
      +XxHLBzi/v0HhKPJLdchARDb4tJbF8mYBm/+15skDQNd1x/fANswTeIr97n07m1W5udYnr3P
      /EYaXdfQNA3TNNE0DcMw0DUNXTcwgYGLl5iNhvmfn13AMHR0XX/8/48mEGrpBCP3xx++lqY5
      oyuEKD7R0BT/++abzIZifPTWvzIa62RvYIFbcxrnz3+P+mAjPv06C+vVlIVvk2wt48e/+TXu
      TILTJ7oZnghzpHc3l37+cxLlzfzVX/wJYJJKJnGpLn7yz/+Eq+Ug9wcuYwTb2ddSzukTBxia
      yxCJbjA5eIWoLmsAsU0q6js4941v0FYfwKV6eensq+zreYG2sggj82HMTIYjL58lPjPIcuzh
      RlLD7h769rayFl6j89CL1JbpVLcf4o2vvoKqALipb9nNt869hq+qiVMnjlLT8QLnXjvDS31t
      /NuFWxzpbgcglnHRf3S/nAcQ22Nhfp6mlhbmZ2YJlLvwVLWSXp1kZGKJI8dP4CfJ4K1b+Oo6
      aK8y0ctqicaT+EjhC1YydmeQuo4DxJfGiRCg7+B+NhYXKW9uptwFS/ML1DU1Mj58i7irikO9
      bYyNzLCvp4Pl1Q0q3CmGx1ckAMLZZBNIONr/A/zZ1CAq9NbaAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='N exams' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='N questions' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 11' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3dWYxc13ng8f+9te/VVb3vO7cmm6IoihQlipYl27IdO7bHjjIJEBtBFsw8
      DDDAvM2DgXkYYBbkYYDBZEcQO3EiZ6zEimTZI9sSKZLivvRevVbvtXRX177cunceKLVEsooi
      WdXdt8nzAwixSlWHX3fdr85yzyJpmqYhCE8oeacDEISdJBJAeKKJBBCeaCIBhCeaSABh0/TI
      ZSJJhffefZt4Ks3Vm8OUGiG5OR//1KM4Vy8HtivEqjPudACCfiiJdSYXZ5kYmqG+pZnF5Txe
      +SIzcRMvHOnl/JmztOw/zvRqEmt6lQaflXOXz7IabcRpDDEdkznS14hia0BZW6Kxuxezzr9i
      JTEMKnwsvjTCu++dw9F0iEx0lLo9x3j/n9/G57TQ1O1jPqxid9YwE5zi9Mu/SWzk15z+5ud4
      5/URGn1pbl6b4Pi3vsTiTAiUIr/5tS8i7fQP9Rl0np/CdnL5G5kJRBl8ppupkTC9vW20N7io
      7+qhu70Ti0Git7uLp06+wvrcLXwuC+++ex7NpBJcCOHx1eD2t2NYvknTwLO6v/hB1ABClWXj
      K7xzZoRXv3Qas0H/3693JEAul0Pkg/AkuaMTXCgUHusESCaTWK1WjEbR9xduu+NKcDqdOxXH
      fQWu3qD5yCCOCsspFovY7XbMZnNV4hJ2P/030oDa1mbEJStsBV0mgKalCc5FNh8r+QLRhQWS
      RXUHoxIeRzptDCd480c/oW1/y+YzoekVXv3j7+LcBSMLwu6h0wRwM3C4g5zBQlvPPvo7G5Gl
      3TCqLOw2ur0PoGka+Wya4NQYE3PLmKx+Tn3uWazyo9cAsVhMdIKFO+i0BtBIhIP86syHYLKS
      K6gc2teBQdQCQpXpMgE0LcWHlyc5cfplzAYZTS1w4+J1mtob8BgNOx2e8BjRZQJAmqXZEDb3
      yOYzoeAKyaIqEkCoKl32ATQtSziUw1iMkbf6afA5SYTDmHx+bBWMAok+gHA3XY4pSpKV+gYP
      NqeDoXPv8Nd/83eECjJWMQQqVJmur6hQcIq4auO5F54jMjdfcnUSwEZonpsjAQpFlbmJYRbC
      G2jFHCM3b7Keym1rzMLuotsEUApZ5qfCHDx+lNXxSQaOD5acX65kNhhfiNHb2UJhbZZ1fIRn
      AkwExvE0NjI1sXuX6wlbT6edYMgl1xgdHWXJJNNY245dkkomQC6bJhld5dKVBF21Dmrbu5CL
      URY1A12+OmLhEJqmUSwWUVUVRVG2/WcR9EunCaARWlqm8+nDtx/lcyhQckKc1e6mxu9D0lQk
      h525W9eRtCJtDXZGRm5R0CxIkoTRaESWZYxGo+gEC5t0mgBQ29yBZPOQzuYxmBxl22oGi529
      /T2kC1DjdeNxrSFbXTisBuzRdZyemm2NW9hddJoAEq6aWnKJdWZWV5mcXKS9r6NMsBI2pwfb
      R4/cNf7N/+Ovrd2GWIXdTLedYIBCPsPGxgayLJoswtbQaQ1wm9nq5qWvfJ3EYhDTTgcjPJZ0
      XQOsTAwxFJjmw/NXyO90MMJjSbcJoGkq/SdOYUmEGXzhhc02viBUk06bQBpLgTEmpiaZDcdw
      LCZoaX0F606HJTx2dJoAMBMYYXx8mY5nj+C3eBBzQIWtoNsEGHj2FKp2EXd9PW6TfVdssyfs
      PrrtA4xcOsuNoXFmg0EWl0KI/SCEraDTGkDi8MkXKco2NKcTh8UqagBhS5RMgHxqg+GZZZ4a
      2MvM6FXMDfuIBC6SKDjo66tjfCyIp6GNg3s7t6wK0YoaTpeVockZWtp6y06FBkhHg7x9JsBX
      vjDIuQ9uINm9DHS4uRWYx1XXwTMDPVsUpbDblUyAYlZhPbJMptjJSiiEz9GD2VXL0Z4+EtF5
      +vY/hd+7ld/KGkvTQ9yai+BzmQhtJMveCNOKeaaXU/S1+0lHQvQe/xzS/BCz8QInXzjNxOiw
      mA0qlFW2CdTVXsPI9Um8jU0ArK0ESeUkmnwak1PD1De3sLendcsCm5uJcPrll3DIcPGdX7MB
      eEu8LhldZnF5iY1wFOcze8ltJNEyCjY7pLNplKIkZoMKZZVMAEmWsXhayM0P0d7eTTwv0dS5
      h+7ubsLzYyj5HPmCggZbUgtomkZDi5/rF84hAbK3DnOxiCrL92yQ5arv4IuvdBBaXsHf4Gf8
      xjWMdR1019u4dmOY1r4DWxCh8LjQ6aL4MO+9u8yJF/ZsPjd14SK+4ydotDx6v10sihfuptNR
      IAdKcoZ/fmMct9eNBKhFM21G3Y7aCruULhNAkmx0trk5+7PrfO8PvkdHfanWvyBUTpcJABIt
      vYd4+fMuWsXFL2whnfYBNnjjhz/HXGPffC69keelb38Nv+nRZwV9ug8wH9rgv/7wbMWx/odv
      PcuedrHybLfSaQ2g0rn3KHv6/ZjdbrLxOOHpWbT73g57OAVFZTGcqLicXKFYhWiESs2uxPj7
      d4ce+n26TABJqmFPX57X//yv8D19mI3ZMN/47rcrPiNMeHxtpHJcGF546PfpMgEATBYHew4O
      4GzvwH+g8gPyBKEU3Y4rmqxOrGoGb1Mn4+fOUXljRRDupdsEAOgc6OVXr/8dCadf1ADCltB1
      AqwtzbOyYcCUXiNb7kWaRnR1gbnFVVRNY3VhlkgshaYWmJuZJpktbGfIwi6j2z4AgCwbySeX
      CK6ZygZaLORIZAqkkmFWiwkW1jW0hVHifitFg53RsQDPHN6/rXELu4e+E8Di5d/+/ndpqvGU
      PSjbYLbic9vJFTTMSobm3gNIwSEWFQODXV3kx0tPh67WtGhFUcjnxaYtO634iJ+nrhNALcb5
      yY/+ge7ufXzpq6dL7gqhZDYYm1qgvaMDiywzNRmATJZav5XZ4AzpgqHkdGijsTo/ernp1X/8
      P98kmaksMb52cg/f+ZyYzfogDI/4eeo6AdDs/M4f/hEN1vJdFclooa7GRTwex93eRmduCYNr
      Pz6nifngIs17e7cx4E8k03kSFSaAuMm29XSdALKpwI/+/E/p6CpfAxhMVrp6+zcf21s6Nv/e
      3tm59UE+ZjaSWUKxVEVlOG0WmvzOKkW0tXSdAPWtXTT5Z6lpbMCy08E8IS6MLPC/37hcURnP
      H2zjP/32ySpFtLV0nQAj5y7wzG+8xvjbb5A6uo/d8Z2y9WZXYsSSZQeGH4jdYqK/zf/ZL6yi
      Mzfn+HBksaIybBYj//4bx6oUkc4ToO/IId761x/jbenD/tkvf2L846+G+eDWfEVl9Lf6+O//
      7gtViujBzC7HOHMzWFEZLru5qgmg0xthGrPjQ2g1XfzWa9+h2W2s4jxQQfiEThMA5gMBkjkF
      VckzMzaJOOxU2Aq6bAJpWpH+gQOc/dkbKKpG58HjGNNpCjYbJknsESdUj05rgAhvv3WDnv49
      7Nm7F0shxr/+8J9YyT343b7IQoBf/vKXXLo1tYVxCrudThPATmunH6fbg8/nw+N2UdPWjPMh
      doVYTxU4eeo0Nim9hXEKu50um0ASLvb213L5xjWKmgYY6DlwBK/hwdcDy6pCOpOmoIgmk1Ce
      LhMASaK19xCtPQdR0ZCQedimf2d3F9eui53hhPvTZwJ8TJKQH3HzRYPFxdFnn61yQMLj5o5t
      UaLRKKr6+B5FkclkMJvNGAwGNA3ySuWTzUzGe/crhepMZDPIEkbDvf2eQlFFVSu7MyJJYDbe
      26QsqhpKsbJrQJYlTCXiVooqxQrjBrCU2BpH1TQKysPHrct9ge4WuHqD5iOVL4wXe4MKd9N3
      E+gjrf09ZRfECEIldDkMqml5YuufTMmNLq2wsbFB7jFungk7Q6c1wBr/+NfvsPdo1+YzwXd+
      zYt/8Hu03WdxjCA8LJ0mgJPGRhMFyUx3Zzs1LjuHDh3GVcHZAIJQim47wZpWZHV+hqnZeWLJ
      DC5fMyeODWKSH/3GlugEC3fTaXtCI5eKs7wSoqBKeHz1tDfUUhSTooUq02UCaFqG82cvY/M1
      cejQIVrrXExNBCiI61+oMp02qtMszKyQo8jsR89EgxFSRRVXiRssjyK0nuJvf36j4nK+ffoA
      7Q2eKkQk7ASdJoCV515+hdYWJ6rRgtVsIjw9g7WC9v/dkpk879+obHkewCtHe0QC7GK6TABJ
      ctLT5yQyP8GHNyaQTDaeOXESd4lb94JQCV32AT5WyGaIJxLYXU6uXbxGudtguXScUGSNoqqx
      sRYhkc6haUUi4TDZgjgZXihPlzXAx2KhDF9+7TVWr9+k+fjBkvNC1XyK6zdHqG1sxmnMMBQI
      Q1GhrdHOWkohvxjl2OG92x67sDvoNgE2QtP89Kf/gjMwht/XQfdTpSdGZ1IJ0qkUoVAUR8FI
      58AgUnCYxZzE4L6DBMTmuMJ96DQBNIqahVdf+w4mhwOzqfyuQGaLFV9jK15TgZSqklhcRktk
      8bjNhKNhMnlpRzbHFXYH3fYBUvF1NpJJIqurhCPrZW+Bmewe2nxWUpKTzr4BaqQYDd399PXt
      IR4O0bunb1vjFnYXndYAEm19Axilm3w4NM1KOMjg0QFMZV7ra+rA99Gjjr5PDsPYNzCwDbEK
      u5luawAAg9GM3W5HVoplR4AEoRI6rQFuszlrOHqijUMHk2J3aGFL6LoGmLx0ng0s3PzgPJmd
      DkZ4LOk6AQ48/xw33/kJrv6DYmt0YUvoNAE0InNTXLp0jbVkirmJyfLHpApCBXTbBxgbHmIp
      nOLQyZPUmOz6DVTY1XR7XQ08c5TIW/+PaChE0eKhrbNlp0PSjfdvzDG3ulFRGbUeO68+uzMH
      COqJbhPg5oULJHIq9R4PLpPjEfeHezxdGFmoygkxIgF0nABHX3yRxFs/JxYOo1oVenY6oCfE
      Ly5P8af/cqWiMp4baOM/fudElSLaWiUTQMkmuX79OrKjgeYaAyZvKz6rxvj0PHv6eh96o9qH
      J6FkC7R0tTMxt4z6GUckFdNhfn52gs9/bpBLZy8heRo41O7i8q1Jatv7GegRzacHpaqPtsXg
      pxUr3FpxO5VMgEIqR0PvXtpqaxm9dQ01BSafkfGpIP19vdvQHNFIxVe5NjyBbJBxNbvL7gyn
      qQpjkys0+R2kVoK0HDmFND/MWCjOiRdOMTE6gqY1o6rq5qxQRVEoFqtzCPXH5W2namzkoVF6
      Rmw19obVNG3bfyePqkwTqMjY9atEW/ZgNdsxa3kWVlM0Nnq3LbAbl66z56ln8JglLp+5SvL5
      QVwlXqfkczS2dbI8O43BZicRWkbLKXhcBlZCIQra7VVk0kfVlizLH/2pThrLsoQsb+9oslSl
      r6BScUtVqd63/3fyqEomgGy28dSx56h1u1lcXMJnlZjaUGmQt+eoOk1T6T/8NNFklrQCh048
      iyGbRbFYMN71AZmsDvxWMMtdONxOfIlJjF391HvNTE5M09vXiyRJd/yRZRlJqs4HJEny9n/Y
      VbhGJbYuASSpdNl6VDIBLC7X5tyblpZmAAa29UzlCJcvLvD08/2bz5z9v2+y/5tfp9Vaek6o
      y+MGoKXrk/f07RUrwYT702ma1rBvn4+R4TFS2SzZbJaWwUHqzLodtBJ2KV1eUZJkwmlM8+Gt
      cQ4fP0lb/fb1PYQniy4TQNOgofcpfvdbrTT4nB+NKEgYDHKVOmmCcJsuEwCi/NMPf0Z9dx1z
      c9O3n5kL89J3X6NRNIOEKtLp1WTl5Cuv4LEWcbQ2E19cROkvYK/iznDC42V1Lcmvrs0+9Pt0
      mQCS5KTWE+HP/+QvcR/cj5wz8zvf/RbWnQ5M0K2V9RR//+7QQ79PlwkA4PK38fV/85u49x5A
      TiXFGWHCltDpMChIsoHE6jwp1cTV986S3umAhMeSbhMAYO+xQd74P/+LfF1LxUekCkIpuk6A
      mZtDmH1dmGMhkmVeo6lFZsdvcuXWOAVFYfzGZSYXwqj5FFcuXmQ1lirzTkHQeQLUtrZQWJ8l
      pJoptzmiWlRwN3RQZ1dYmR1HqekluxJkdHKKzr37WJyZ2daYhd1Ft51ggORGmi//7u/R5XeV
      zVSD0UQhuYxi9uFX18HnQUqaWcaA0+7EbNJ2ZHPcH783Qi5f2ZTrga56Bnsb7nm+WlOWS8Vd
      jWniqlq67K1UfMTPU9cJYHaY+eWbP2G8qYcvfPlUyc2x8sk1rt4cwV/fjLerjsmLZ5CtDva0
      urh44SxWT9OObI771oVpEpnKLgKjycQz+9vueb4aMy0lSSoZt8FQ+SEksly67K1keMTPU9cJ
      kEvmeOGr36TH76Tcx2Jy+nj55ZfRkDCajLxwqh5JMiDLEv6mLgwGXf+IT5S1eIZYsrINbgyy
      REcV16Xo+uqwumz84u1/ZqKhiy+8+kLJGkCSZEyf+raRjZ9MlzaZSk+dFnbGv56f4MfvjVZU
      hstu5gf/+ZtVikjnnWCb3YpsMFA0yPrOVGHX0nUCBEcnOfLyVzCsrYi9QYUtoesE2H/yeVZu
      XKDl8FGxN6iwJXSaABq3PvyAtLGGl7/0RbIrQcQpXMJW0GkCQCKyzPJaAiUTZza4LA7IELaE
      LvuWmpalbd8xAjfeYyil8cKXv0x2ZYViXT0Ow4PlrKYqLC+t4K1rxG7R5Y8p6IBOa4A4P339
      LVKKjNVi4Pr5X/H6D95gXXnwu5SL0+PEUimGRwNbGKew2+n0q9HF4DP76To4SFOdm0R0lRvO
      GrzGB79LmVVlenv6CYwPb2Gcwm6nywSQsHH4yD6uXb3AufUETm89R44cwfEQUwBMKCwuL5DJ
      67SSE3RBlwmAJOHw1vH8S1985CLae/cwPTnLnr3inGChvDsSIJvNVmXjVb1obmsDFDKZ2zMF
      8/k8BoOBYrFIUclT66p8qoRWLJDJ3Hubzuc0YTFW9ru0GLSSZTvMUsWxu22GkmUbUCsu226W
      SpZtNmgVl+2wmkqWrRULj1S2pH3qik+lUo9VAtwtmUxitVqrNhNU2P3uuBIcDn0uPAxcvUHz
      kcGKl0UqioLdbt/2qbqCfu2KHqK/uVHsCiFsCV0mgKalmJsJf/JYVYkEgyQqPLlEEO6m08Zw
      krdef4PWfc2bz4RnQnzpj34Pl1GXOSvsUjpNAA8HD7eTxEBbzwH2dTcji01xhS1wxyiQnmia
      hlLIMz81wuj0IkaLj1MvHcdWwXrYWCwmOsHCHXRZA2iaRmxlhvc+uIRkspItqBzc24FJ1AJC
      lekyASDFleuznDj9CmaDhKYWuHX5Ji0djXgeYj6QIHwW3SbA4kwIu2ds85nVuWWSRVUkgFBV
      uuwDaFqOSDiHlI+St9XS5HeRjEQx1dRgfcD1AKWIPoBwN12OKUqShbp6Ny6vl5FzP+Mv/uoH
      LGc1LBVc/IJQiq6vqOWZcRKSi9OfP0VscZFyVdX6yhzXbo2RL6rMjN1kfjWGVsxx69o11pLb
      c7axsDvpNgGUfIa5wCr7nh4keGuU/ccOlTwfWsnEmFxOsL+/C2VthoSpkejcJOMT49S1dzAd
      ECvChPJ02gmGXCrG1PQUEYeVxqY27JJUMgFy2SyJyArnL8bprrXja+9Gyq+yhIFuTw1R81LJ
      zXEFAXSbABorC/M0HdgHqko2kaQAJbdGtNpdeH1eNFVDdjqZvXEVSYKORju3bl1HlR0lN8cV
      BNBtAkBjRx9mVy3xVAajqfzmuAaLnQP79pIpgNvtwOvZQDbbsVkMOGNx7C73tsYt7C467QNI
      ONw12E2wvr7OB2c+oHzDRcJid+L1OJElCafbi91qRpIMeGtqMIv7BsJ96DQBbstnkkQiEZDN
      ZUeABKESum0CAZjMTl768tfZWJjVd6DCrqXrGmB1apTrY+N8eOEqhZ0ORngs6TYBNFWl7/gL
      uPIJnj79IradDkh4LOm0ZaGxGBglMD3NXHQD5/wGTd94GetOhyU8dnRbA8xNjjE6PEVtezst
      zfX6DVTY1XRaA8D+Y8+jyVfwtLbiNtrK3gcQhEroNgHGLn/AlWuTtBqM+G0+mtqbRBIIVafT
      BJAYfO5FVIODoseD0+IoOQ/oExqqqiFJEpp2+7/A5t8lsZRSKKNkAuSTMS5fv4Zsq+XI4AHM
      O7EViQZ2p5mhqVna2vvueyMsFQny9tkAX3llkPPnh5Bsbg60uxiZWsLhb+WZg73bFrawu5RM
      gGKuSNveAaSNKLFklnqvfZvD0pgP3GAouE6t28xSNFa2qtKUHDOrafrba8lEw/QdP40UHGIu
      oXDi+VMExobFbFChrDLXVZGx61dxeps40rEzg4/B2SinXjqNXYJLv3ifOFDqfPDU+gpLS0vE
      wlFcz+wlsx5HyxSw2zVSmTR5RRKzQYWySq4JzsZirKsqTT7fTsSEpqmMXDzDTDgBgMHk5cXP
      H8dqMJTdICu8soqv3s/EzWuY/J101du4dmOE1r4DNNbc3lZXrAkW7qbTRfFhfv2LJU6c2rP5
      3OT5i/ife46mCg68Ewkg3E2no0AO1Owcb7wxhtdXgwxoqoVOsS+oUGW6TABJstHR4uLMz6b4
      3ktfpKO+VOtfECqnywQAiZbeQ3zxFQ+t4uIXtpBO+wAxfvK372DxOzefS63n+PxvfR2/6dHv
      B4s+gHA3ndYA0DPwLL3dNVi8HjIbG0TngiDWhQlVpssEkCQvfd1ZfvRnf4Hv6cMk5tf45ne/
      XfEZYYJwN10mAIDJ5uLg0SM4e3rwHXaLi1/YEvpNAIsDYy6Os76N4Z+9if0bv4Frp4PSif/x
      o3N8cGu+ojL62nz8tz9+pUoRPZgLwwtcmViuqAyr2cjvf+WpKkWk4wQA6D60h5/8ww/wt/eL
      GuBTVE1DrXDsQlO3vz8VWIjy80tTFZXhspurmgC6vrMUmZ8jkjJjSkXJlnuRphFZCjIdXEbV
      NJaDU4TWk2hqnulAgHgmv50hC7uMrhPAaLaQTywyH8uWraqKhRxpBXKJVVaCkyzGJebGx5ie
      nACLhfGxyW2NWdhddN0EwuDkt3//ezR73WUPyjaYrXjsZjJ5DxY1Q1NXH1IwzWLRwGBzG5nE
      zkyH/pMfXySTq+zfOjnQyouD7fc8r6qVn5esaRr5/PbWjsUqxI1GVePWdwKQ5o2//xFd3fv4
      0ldPl9wVopCOMTI5T3t7G2aLzOT4GOSz1NfamJqZJF0w7Mh06FtTIRIVNr96WnwlY5UrOCnz
      Y5IkbfsNQUMV4kaiqnHrOgHUopnX/uAPabSW/8XJZhstjX5yuTzG2hZ6mlcwODrwOowsLa7Q
      0d60jRELu42uE8Bo0Xj9L/+M9s59vPrV0yW3RzcYLbR3dm8+tjW2bv69pa1tG6J8vAxNh/jl
      tZmKyuhr9fPqs7tjGaquE6C2qZUG3zSe+rqyfQChuhYjcd69UlkC5PKKSIBqGL1wiWNfe43x
      t94gdewAzs9+i/CEiqdyTCxEH/p9uk6A/qNP8dabP6amfY+4ESbc18xKjP/yN+8/9Pt0eh9A
      Y3r0Jqq7ne+89h3qbVCFATRBuIdOEwAWpyaJ5wqohRyz49OIw06FraDLJpCmKfQNHOT8L/6F
      vKLRc/g55FSSgs2BSX6wXd40TUMtFpHus5OEIOi0Bojy1ptXaOvspqe3B5Kr/PRv/4mV/IPf
      WY0sBDh77gOuDFU2+Up4vOmyBgAHnb0N+GrrsVpMKPksqe42XA+xK0QsrXD8uVMExoa2ME5h
      t9NlAkg42dtfz5UbV8grKrLBRO/AETyGB18PLKsKqUySvCKaP0J5ukwAJInm7gM0d+3/aBWw
      xMM24zt7url+fYTW/gNbEKDwuNBnAnxMkj5jW/TyDGYnTx87VtVwhMfPHduiRKPRqky11StV
      VR9qJuWnzxp42PKLn7HiSlNVpM+IRZbY/Pc/Xbaqadx3QZimocF9Y5cAWb63bE2j4tVmksTm
      yNudZWt81kK0B/m9GErFDaiP8DvX5b5AW6VYLCLL8pYcmPHxmgOjcWsqVUVRRNklyjYYDBV9
      njodBt0aW31STDXm6Yuyt7fsJyoB7v72zyfX+PD8eWaW7j+Jan09SvEzWoaSJN3xgQRGbpFR
      NNLxVcamlu773thaFOUzyt9sWqXWOPPee7x35hyReNmV0ps0VWVtbe0BytZYXV1BU+JMTC2h
      FJKsracfuqxSZSuZGOff/zW/fv8cqyuLRNMP2sxWWYuuld0OrVRtno2t8sEHZxgKzH/0vtsr
      3z5u50Sjd37Whu9///vff/Af5/ESGLpBff8hamwGsukMRoNEMpsnFppnem6VmjofC5OjjE4v
      Uu9zMjo6hsXpIZ/JY5YKJBUZS5l7E7OBIVRzDcnIFMtRmXoPjE3M4vb5iS5NMRUMU1tXQ3By
      jInZJfxeB6Oj41hdbnK5AkatQKYIZuOdQ7+y2UaNqYipoROfUaVoNJGMbyCrOUbHJnHU+Fie
      HiOa1nAYCwwPjxLPaWipMMFQEpdFQpEs5JIJDBYLn9xYl5ibmcGUSxFYy+IlQcZWy9rcOAnF
      iFXKbZaVS68RiedxWWFsZAyrx09kPsBKLE9NjeuegQvZZKXOlqfg7aXTEuNSIExBUbBICpLB
      SCKZIp9Ns7QaQU2vM7W4Rq3XzsTIMMFQArdZYWwyiMvtJKdoFHMZkI2bfYFPS65E8O7ZS1e9
      j0QsylJojWx8A5vTSmBkmIVIHJdRYWx6EZfb/mQnQE2tn+DYTcIplVQ0gstpZTESYy0cptWj
      Mh0qgM2Jw6hikTWmZ+cJbWRQMxuk02msLi/WMnuVJhJxcvkihWIeE2YikRBtrbVMLURJrEVo
      tGoE0wUMBid2o4pRVpkNzhPayKEkN8jlkpidPqymexMsl1gnbbBTXF4g761hcXKc8FyAhcg6
      mUKB0MIKdo+PtdVFWjt7yGaTpNbDTAxP422pZS2aZD0apb6u9o7h5UI8TCAO3X4jwXCeRlOS
      C8NTrETW0fIZ2rp6yGbT4KkjH10mHJxiLrJOPJliPRTC7PBQ6/NSaraKkooSU13UGZOsKl7U
      VIhCag2Ls4bp4BJrS7P4mjpZmBqhKNsppKNY/a1IhTySkmRufop00UMiFiaT3BvyJyoAAAFj
      SURBVMDjryuZANnYKpdHRimoFpZnxqhv62J9eYV0ch17YydaLg35JNOBcQr22ierCXS3yPI8
      GxmFQqGAml3n4uVrpAvgdHvwuOwYTCaWpsZZCMVIrK8h29wYJJX2RifToQwuq6ls2ZLRhiE1
      j9HTCshY5QK3hgNYbHacbi8epw2T0cD8zDhL4Q3ia2sY7R6MKHTUW5haVXBZ7995tDoM3Pzw
      QxYiKRxuD3aHm9oaPy6Hkem5IChZhoZGyBbyrK9ncNutGF1+0gvD2Bs677m34vQ4SCeyeGx2
      YtksVrsDp81GU0MDhuLHZUGN34PNasbudmOzOqivq8PttDA7N0ssukIqnyO0Eisbt9fvx2a1
      YEDh8sWLxFI5HDX1NPpcuF1OlmamyEsyk6NDRBNZ1tbWcXo9aEWZGjlNTHJgMpTrz1l46tkT
      7Otqwl3bSJ3n9vl2JhNMDN8ilsqxFl3H7bKDZOH/A9lGWlcU67KMAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Study Time vs EL' width='192'>
      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
      9Ja/XqPBKYzR73zm3yUAYssopWiY/E+86cWyX1M8+suVzSQbpWn0Hz/zz7afBlWWSSwaJpnJ
      SxEOUfdsD0AuFWVpNcrE2BglOekg6pztQ6DG1h56c3mivlbcWuV1gWrBNM2qj/0sy6poeU3T
      3PaPJK20LpBhGBXPw7LMCtfrxnth27eDVDTEahoG+7vQ0HBXWBeoFlyu6j/sVdf1ipa3Fn2q
      tkrfY9M0qXSXqOuuCtfrxoMc24dALpebXDLC1OwiphwEiDpn+yeAv6OXsx29djcrRFXIxXDC
      0SQAwtF2xBdhqWScUiFX9vTZbI62KvZHbB87IgD5B+/iu1L+1Z2uvjer2BuxncgQSDiaBEA4
      mgRAOJoEQDiaBEA4mgRAOJoEQDiaBEA4mgRAOJoEQDiaBEA4mgRAOJoEQDiaBEA4mu0BKBUy
      jN/+mETJ7paFsJ/t9wNouosuv5esCa3uZ++KV8pZd8lXtrw7Y91UsszPuz1UNo+N/257ANwe
      H74GD5lHP5vm/9cFep46MOWwrPrbeCzLqmh5rU3q12wHSqmKlvnxdlGJSter2qQkvO0ByMSX
      uXV/nFJXnu5XXsLzVF0gj6c6pZ90XatKuy9C1/WKllffIXWBKllmwzCeoy5QhetV33iUb39Z
      lPbdvPGVX7O7WSGqQs4CCUeTAAhHkwAIR5MACEeTAAhHkwAIR5MACEeTAAhHkwAIR5MACEeT
      AAhHkwAIR5MACEeTAAhHkwAIR7M9AEpZpJMJ8qXq3P0lhJ1svyEmGV5kfC4Mmpdzr5zEVX83
      awnxhO2fAPlcjqETZ+lp0SlWfsunEDVlewB0XScRWyOVKeLe/re5ih3O9gB07z1AKRZgz6Gj
      eGT4I+rcM8cApZI91awOHhl5pj3DMNA0zbb2P8nEheFpLXt6y+WrbHq3H8vdVNFrTKVXtLym
      aaJV0r6nGbPCPrncbpoayv9Y9rr1ypZZ81a0zIZhYLqbK5uHpSpbrxYbtq+pp6oMJRKJLS9e
      ZZomrgpKhCilUEptWv7iReYhfaqP6S3LQtM0NK38ocVm83gmAPVAKVXRAiqlsCyr4o2hknkY
      hoHbXf4Js8ertNrzqKR9y7JQStXdeqp0Y9Y0raIQbzaPugtApZ5nY3ueeVSz/VrMYyesp2os
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='adj diff' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='day of week' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='diff v time scatter' width='192'>
      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
      WzMn+QAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='difficulty dist' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='hour of start' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='time per Q' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
